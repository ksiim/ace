services:
  db:
    image: postgres:13
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5433"

  alembic:
    build:
      context: .
      dockerfile: backend/Dockerfile.migrations
    environment:
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - db

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: fastapi_backend
    restart: always
    depends_on:
      - db
    env_file:
      - .env
    environment:
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      GATEWAY_TOKEN: ${GATEWAY_TOKEN}
    ports:
      - "8000:8000"

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      target: dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - .env
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      VITE_API_URL: ${VITE_API_URL}
    command: [ "npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "3000" ]
    depends_on:
      - backend



  frontend-prod:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      target: production
    environment:
      VITE_API_URL: ${VITE_API_URL}
    env_file:
      - .env
    volumes:
      - ./frontend:/app
    ports:
      - "80:80"
    depends_on:
      - backend



volumes:
  postgres_data:
