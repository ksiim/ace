services:
  db:
    image: postgres:13
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5433:5433"

  alembic:
    build:
      context: .
      dockerfile: backend/Dockerfile.migrations
    environment:
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    depends_on:
      - db

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: fastapi_backend
    volumes:
      - uploads:/app/uploads
    restart: always
    depends_on:
      - db
      - rabbitmq
    env_file:
      - .env
    environment:
      POSTGRES_SERVER: ${POSTGRES_SERVER}
      POSTGRES_PORT: ${POSTGRES_PORT}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      GATEWAY_TOKEN: ${GATEWAY_TOKEN}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: "5672"
    ports:
      - "8000:8000"

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      target: dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    env_file:
      - .env
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      VITE_API_URL: ${VITE_API_URL}
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0", "--port", "3000"]
    depends_on:
      - backend

  frontend-prod:
    build:
      context: .
      dockerfile: frontend/Dockerfile
      target: production
      args:
        - VITE_API_URL=${VITE_API_URL}
    volumes:
      - uploads:/usr/share/nginx/html/uploads
    env_file:
      - .env
    environment:
      - VITE_API_URL=${VITE_API_URL}
    ports:
      - "80:80"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest  # Можно настроить через .env
      RABBITMQ_DEFAULT_PASS: guest  # По умолчанию, лучше изменить в продакшене
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  bot:
    build:
      context: .
      dockerfile: bot/Dockerfile
    container_name: telegram_bot
    depends_on:
      - rabbitmq 
    env_file:
      - .env
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: "5672"
    restart: unless-stopped
    volumes:
      - ./bot:/app/bot
      - uploads:/app/uploads

volumes:
  postgres_data:
  rabbitmq_data:
  uploads: